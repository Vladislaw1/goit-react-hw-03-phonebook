{"version":3,"sources":["components/PhoneBook/PhoneBook.module.css","components/PhoneList/PhoneList.jsx","components/FormAddContact/fields.js","components/FormAddContact/initialState.js","components/FormAddContact/FormAddContact.jsx","components/Filter/Filter.jsx","components/PhoneBook/initialState.js","components/PhoneBook/PhoneBook.jsx","App.js","index.js","components/FormAddContact/Form.module.css"],"names":["module","exports","PhoneList","contacts","onClick","map","index","name","number","type","fields","userName","title","required","userPhone","pattern","state","Form","handelSubmit","e","preventDefault","onSubmit","props","reset","handelChange","target","value","setState","this","inptIdName","shortid","generate","inptIdNumber","className","styles","formPhonebook","htmlFor","label","inputForm","id","onChange","btnAddContact","Component","Filter","filter","PhoneBook","addContact","con","prevState","find","item","toLowerCase","alert","deletItem","idx","newList","splice","handleFilter","filterMurkup","normalozeFilter","includes","contactList","JSON","parse","localStorage","getItem","stringify","setItem","list","length","FormAddContact","tablePrice","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4e083de2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"tablePrice\":\"PhoneBook_tablePrice__3lfvz\"};","import React from 'react';\r\n\r\n\r\n\r\nconst PhoneList = ({ contacts, onClick }) => {\r\n\r\n    const list = contacts.map(({name , number}, index) => {\r\n        return (\r\n            <>\r\n                <tr>\r\n                    <td>{name}</td>\r\n                    <td>{number}</td>\r\n                    <td>\r\n                        <button type=\"button\" onClick={() => onClick(index)}>Delete</button>      \r\n                    </td>\r\n                </tr>\r\n            {/* <li key={id} className={styles.PhoneListItem}>\r\n                {name} - {number}\r\n                <button type=\"button\" onClick={() => onClick(index)} className={styles.btnDelet}>Delete</button>\r\n                </li> */}\r\n            </>\r\n    )\r\n    })\r\n    return list;\r\n};\r\n\r\nexport default PhoneList;","const fields = {\r\n    userName: {\r\n        type: \"text\",\r\n        name: \"name\",\r\n        title: \"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\",\r\n        required : \"required\"\r\n    },\r\n    userPhone: {\r\n        type: \"tel\",\r\n        name: \"number\",\r\n        pattern: \"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\",\r\n        title: \"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\",\r\n        required : \"required\"\r\n    }\r\n}\r\n\r\nexport default fields;","export const state = {\r\n    name: \"\",\r\n    number: \"\",\r\n}\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './Form.module.css'\r\nimport fields from './fields'\r\nimport {state} from './initialState'\r\n\r\nimport shortid from 'shortid';\r\n\r\nclass Form extends Component {\r\n    state = {\r\n       ...state\r\n    }\r\n\r\n    \r\n\r\n    handelSubmit = e => {\r\n        \r\n        e.preventDefault();\r\n\r\n        const { onSubmit } = this.props;\r\n        onSubmit(this.state)\r\n        this.reset();\r\n    }\r\n\r\n\r\n    handelChange = ({ target }) => {\r\n\r\n        const { name, value } = target;\r\n        this.setState({ [name]: value })\r\n    }\r\n\r\n    reset = () => {\r\n        this.setState({\r\n            name: \"\",\r\n            number: \"\",\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { name, number } = this.state\r\n        const inptIdName = shortid.generate();\r\n        const inptIdNumber = shortid.generate();\r\n\r\n        return (\r\n            <>\r\n                <form onSubmit={this.handelSubmit} className={styles.formPhonebook}>\r\n                    <label htmlFor={inptIdName} className={styles.label}>\r\n                        Name\r\n                    </label>\r\n                    <input\r\n                        {...fields.userName}\r\n                        className={styles.inputForm}           \r\n                        id={inptIdName}\r\n                        onChange={this.handelChange}\r\n                        value={name}\r\n                        /> \r\n                    \r\n                    <label htmlFor={inptIdNumber} className={styles.label}>\r\n                        Number\r\n                    </label>\r\n                    <input\r\n                        className={styles.inputForm}\r\n                        onChange={this.handelChange}\r\n                        {...fields.userPhone}\r\n                        id={inptIdNumber}\r\n                        value={number}\r\n                    />\r\n                    \r\n                    <button type=\"submit\" className={styles.btnAddContact}>Add contact</button>\r\n                </form>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form;","const Filter = ({ value, onChange }) => {\r\n    return  (<>\r\n        <label>\r\n            Фильтр по имени!!!\r\n            <input type=\"text\" value={value} onChange={onChange} />\r\n        </label>\r\n    </>\r\n    )\r\n};\r\n\r\nexport default Filter","export const state = {\r\n        contacts: [\r\n            { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\r\n            { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\r\n            { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\r\n            { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' }\r\n    ],\r\n        filter: '',\r\n    }","import React, { Component } from 'react';\r\nimport shortid from 'shortid';\r\n\r\nimport styles from './PhoneBook.module.css'\r\n\r\nimport PhoneList from '../PhoneList'\r\nimport FormAddContact from '../FormAddContact'\r\nimport Filter from '../Filter'\r\n\r\nimport {state} from './initialState'\r\n\r\nclass PhoneBook extends Component {\r\n\r\n    state = {\r\n        ...state\r\n    }\r\n\r\n    componentDidMount() {\r\n        const contactList = JSON.parse(localStorage.getItem(\"contacts\"));\r\n        this.setState({\r\n            contacts: contactList || [],\r\n        })\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        const {contacts} = this.state;\r\n        const contactList = JSON.stringify(contacts);\r\n        localStorage.setItem(\"contacts\", contactList);\r\n    }\r\n\r\n    addContact = ({ name, number }) => {\r\n        const con = {\r\n            id: shortid.generate(),\r\n            name,\r\n            number,\r\n        }\r\n        \r\n        this.setState(prevState => {\r\n    \r\n            const result = prevState.contacts.find(item => (item.name.toLowerCase() === name.toLowerCase() || item.number === number));\r\n\r\n            if (result) {\r\n                alert(\"Такой контакт уже есть!!!\");\r\n                return {\r\n                    contacts: prevState.contacts,\r\n                }\r\n            } else {\r\n                return {\r\n                    contacts: [...prevState.contacts, con]\r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    deletItem = (idx) => {\r\n        this.setState(({contacts})=>{\r\n            const newList = [...contacts];\r\n            newList.splice(idx, 1);\r\n            return {\r\n                contacts: newList,\r\n            }\r\n        });\r\n    }\r\n\r\n    handleFilter = ({target}) => {\r\n        this.setState({ filter: target.value })\r\n    }\r\n\r\n    filterMurkup = () => {\r\n        const normalozeFilter = this.state.filter.toLowerCase();\r\n        const filterContacts = this.state.contacts.filter(({ name,number }) => {\r\n            return name.toLowerCase().includes(normalozeFilter) || number.includes(normalozeFilter)\r\n        })\r\n        return filterContacts;\r\n    }\r\n\r\n    render() {\r\n        const { state, addContact, deletItem, handleFilter,filterMurkup} = this;\r\n        const { filter,contacts} = state;\r\n        const list = contacts.length;\r\n        \r\n        const murkupList = () => {\r\n            return (\r\n                <>\r\n                    {\r\n                        (list > 3) ?\r\n                            <Filter value={filter} onChange={handleFilter} />\r\n                            :\r\n                            \"\"\r\n                    }\r\n\r\n                    <table className={styles.tablePrice}>\r\n                        <caption>Contacts</caption>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Name</th>\r\n                                <th>Number</th>\r\n                                <th>Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <PhoneList key={shortid.generate()} contacts={filterMurkup()} onClick={deletItem}/>\r\n                        </tbody>\r\n                      </table>\r\n                </ >\r\n            )\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <h1>Phonebook</h1>\r\n\r\n                <FormAddContact onSubmit={addContact} />\r\n\r\n                {(list > 0) ? murkupList() : <p>Not found Contact!!!</p>}\r\n                \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PhoneBook;","import PhoneBook from './components/PhoneBook'\n\nconst App = () => {\n  return (\n      <>\n        <PhoneBook />    \n      </>\n    )\n}\n  \n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formPhonebook\":\"Form_formPhonebook__2zD6h\",\"label\":\"Form_label__X6gWe\",\"inputForm\":\"Form_inputForm__1vt2w\",\"btnAddContact\":\"Form_btnAddContact__9WENn\"};"],"sourceRoot":""}